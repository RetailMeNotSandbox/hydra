# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

play.http.errorHandler = "core.modules.ErrorHandler"
play.http.filters = "core.modules.Filters"
play.modules.enabled += "core.modules.ActorModule"

play.http.parser.maxMemoryBuffer = 2MB

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Postgres configuration
# ~~~~~

slick.dbs.default {
  driver = "core.db.PgDriver$"  # The Slick driver.
  db {
    driver = "org.postgresql.Driver"  # The underlying JDBC driver used by Slick's backend.
    url = "jdbc:postgresql://localhost:5432/hydradb"
    user = "hydra"
    password = "vagrant"
    numThreads = 25
    queueSize = 10000
  }
}
slick.dbs.write = ${slick.dbs.default}
slick.dbs.read = ${slick.dbs.default}
slick.dbs.read.db.numThreads = 50
slick.dbs.backend = ${slick.dbs.default}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
play.evolutions.enabled = false

# Akka configuration
# ~~~~~
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  actor {
    debug {
      autoreceive = on
      lifecycle = on
      unhandled = on
    }
  }
}

# Miscellaneous
# ~~~~~

# Since we'll be running in Docker, there's no need to track a PIDFILE
# (In fact, there's a bug where the PIDFILE doesn't get cleaned up inside the docker container
#  if we couldn't connect to the database or are missing evolutions)
pidfile.path = "/dev/null"

hydra {
  readOnlyMode = false
  apiKeys = []
  changefeed {
    timeout = 10 seconds
  }
  max-inflight {
    expander: 8
  }
}
